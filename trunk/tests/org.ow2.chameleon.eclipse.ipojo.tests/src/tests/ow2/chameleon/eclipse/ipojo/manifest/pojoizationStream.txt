component { $name="IotPack-Qualif-Features-CCpntQualifFeature-Factory" $classname="com.cohorte.iot.qualif.CCpntQualifFeature" provides { $specifications="{com.cohorte.iot.api.features.IFeature,com.cohorte.iot.api.features.IFeatureReady,com.cohorte.iot.qualif.IQualifFeature}" controller { $field="pController" $value="true" $specification="com.cohorte.iot.api.features.IFeature" }controller { $field="pControllerReady2" $value="false" $specification="com.cohorte.iot.qualif.IQualifFeature" }property { $name="featureName" $field="pModuleId" }}requires { $field="pAccountManager" }requires { $field="pAggregateGenerator" }requires { $field="pCoreBootstrap" }requires { $field="pFeatureManager" }requires { $field="pFeaturesDirs" }requires { $field="pIotPackReady" }requires { $field="pLogger" }requires { $field="pMenusManager" }requires { $field="pModelHelper" }requires { $field="pOrgGenerator" }requires { $field="pOrgManager" }requires { $field="pPlatformDirsSvc" }requires { $field="pSystem" }requires { $field="pTemplateManager" }requires { $field="pWorldHelper" }properties { property { $name="featureId" $field="pFeatureId" }}callback { $transition="validate" $method="validate" }manipulation { $classname="com.cohorte.iot.qualif.CCpntQualifFeature" $super="com.cohorte.iot.aggregator.core.features.CAbstractFeature" interface { $name="com.cohorte.iot.qualif.IQualifFeature" }field { $name="CREDENTIAL" $type="java.lang.String" }field { $name="pAccountManager" $type="com.cohorte.iot.api.managers.IAccountsManager" }field { $name="pAggregateGenerator" $type="com.cohorte.iot.qualif.measures.IMeasuresGenerator" }field { $name="pController" $type="boolean" }field { $name="pControllerReady2" $type="boolean" }field { $name="pCoreBootstrap" $type="com.cohorte.iot.core.api.IBootstrap" }field { $name="pFeature" $type="com.cohorte.iot.api.model.Feature" }field { $name="pFeatureId" $type="java.lang.String" }field { $name="pFeatureManager" $type="com.cohorte.iot.api.managers.IFeaturesManager" }field { $name="pFeaturesDirs" $type="com.cohorte.iot.api.IFeaturesDirsSvc" }field { $name="pIotPackReady" $type="com.cohorte.iot.core.api.IIotPackReady" }field { $name="pLogger" $type="com.cohorte.iot.qualif.IQualifLoggerFile" }field { $name="pLoggerFilePattern" $type="java.lang.String" }field { $name="pMenusManager" $type="com.cohorte.iot.api.managers.IMenusManager" }field { $name="pModelHelper" $type="com.cohorte.iot.api.features.IModelHelper" }field { $name="pModuleId" $type="java.lang.String" }field { $name="pOrgGenerator" $type="com.cohorte.iot.qualif.organizations.IOrganizationGenerator" }field { $name="pOrgManager" $type="com.cohorte.iot.api.managers.IOrganizationsManager" }field { $name="pPlatformDirsSvc" $type="org.psem2m.isolates.services.dirs.IPlatformDirsSvc" }field { $name="pQualifDir" $type="org.psem2m.utilities.files.CXFileDir" }field { $name="pSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }field { $name="pTemplateManager" $type="com.cohorte.iot.api.managers.ITemplatesManager" }field { $name="pWorldHelper" $type="com.cohorte.iot.api.managers.IWorldHelpers" }method { $name="setControllerReady" }method { $name="authenticate" $return="com.cohorte.iot.api.security.CAuthInfos" $arguments="{java.lang.String}" $names="{aTenantId}" }method { $name="createDefaultOrganization" }method { $name="createQualificationUsers" }method { $name="doActivate" }method { $name="doDeactivate" }method { $name="doInstall" }method { $name="doPrepare" }method { $name="doUninstall" }method { $name="doWakeup" }method { $name="getFeatureCredential" $return="java.lang.String" }method { $name="getFeatureId" $return="java.lang.String" }method { $name="getFeatureLogger" $return="org.psem2m.utilities.logging.IActivityLogger" }method { $name="getFeaturesDirsSvc" $return="com.cohorte.iot.api.IFeaturesDirsSvc" }method { $name="getFeaturesManager" $return="com.cohorte.iot.api.managers.IFeaturesManager" }method { $name="getInternalSystem" $return="com.cohorte.iot.core.api.IInternalSystem" }method { $name="getLoggerFilePattern" $return="java.lang.String" }method { $name="getMenusService" $return="com.cohorte.iot.api.managers.IMenusManager" }method { $name="getModelHelpers" $return="com.cohorte.iot.api.features.IModelHelper" }method { $name="getTemplateManager" $return="com.cohorte.iot.api.managers.ITemplatesManager" }method { $name="getWorldHelpers" $return="com.cohorte.iot.api.managers.IWorldHelpers" }method { $name="validate" }}}component { $name="IotPack-Qualif-Features-CCpntQualifFeatureFactory-Factory" $classname="com.cohorte.iot.qualif.CCpntQualifFeatureFactory" provides { $specifications="{com.cohorte.iot.api.features.IFeatureFactory}" }requires { $field="pConfig" }requires { $field="pCoreBootstrap" }requires { $field="pIotPackReady" }requires { $field="pSystem" }callback { $transition="validate" $method="validate" }manipulation { $classname="com.cohorte.iot.qualif.CCpntQualifFeatureFactory" $super="com.cohorte.iot.aggregator.core.features.CAbstractFeatureFactory" field { $name="pBundleContext" $type="org.osgi.framework.BundleContext" }field { $name="pConfig" $type="org.cohorte.extra.config.IConfiguration" }field { $name="pCoreBootstrap" $type="com.cohorte.iot.core.api.IBootstrap" }field { $name="pIotPackReady" $type="com.cohorte.iot.core.api.IIotPackReady" }field { $name="pSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }method { $name="getBundleContext" $return="org.osgi.framework.BundleContext" }method { $name="getFeatureComponentDependenciesNames" $return="java.lang.String[]" }method { $name="getFeatureComponentName" $return="java.lang.String" }method { $name="getInternalSystem" $return="com.cohorte.iot.core.api.IInternalSystem" }method { $name="setAutoStart" }method { $name="validate" }}}component { $name="IotPack-Qualif-CCpntQualifLoggerFile-Factory" $classname="com.cohorte.iot.qualif.CCpntQualifLoggerFile" provides { $specifications="{com.cohorte.iot.qualif.IQualifLoggerFile,com.cohorte.iot.core.api.ILoggerFile}" }requires { $field="pConfig" }requires { $field="pInternalSystem" }requires { $field="pLogger" }requires { $field="pPlatformDirsSvc" }properties { property { $name="name" $field="pName" }property { $name="fileNamePrefix" $field="pFileNamePrefix" }}callback { $transition="validate" $method="validate" }manipulation { $classname="com.cohorte.iot.qualif.CCpntQualifLoggerFile" $super="com.cohorte.iot.aggregator.core.api.CAbstractLoggerFile" interface { $name="com.cohorte.iot.qualif.IQualifLoggerFile" }field { $name="pActivityLoggerJul" $type="org.psem2m.utilities.logging.IActivityLoggerJul" }field { $name="pConfig" $type="org.cohorte.extra.config.IConfiguration" }field { $name="pFileNamePrefix" $type="java.lang.String" }field { $name="pInternalSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }field { $name="pLogger" $type="org.psem2m.isolates.base.IIsolateLoggerSvc" }field { $name="pName" $type="java.lang.String" }field { $name="pPlatformDirsSvc" $type="org.psem2m.isolates.services.dirs.IPlatformDirsSvc" }method { $name="getFileNamePrefix" $return="java.lang.String" }method { $name="getJulLogger" $return="java.util.logging.Logger" }method { $name="getLogger" $return="org.psem2m.utilities.logging.IActivityLogger" }method { $name="getName" $return="java.lang.String" }method { $name="loadConfiguration" }method { $name="setLevel" $arguments="{java.util.logging.Level}" $names="{aLevel}" }method { $name="setLevel" $arguments="{java.lang.String}" $names="{aLevel}" }method { $name="validate" }}}component { $name="IotPack-Qualif-CCpntAggregateGenerator-Factory" $classname="com.cohorte.iot.qualif.measures.CCpntMeasuresGenerator" provides { $specifications="{com.cohorte.iot.qualif.measures.IMeasuresGenerator}" }requires { $field="pAccountsManager" }requires { $field="pAuthManager" }requires { $field="pDevicesManager" }requires { $field="pDeviceSubSetManager" }requires { $field="pEventPublisher" }requires { $field="pFeature" $filter="(featureName=qualification)" $optional="true" }requires { $field="pInternalSystem" }requires { $field="pLoggerService" }requires { $field="pMeasureManager" }requires { $field="pOrgManager" }requires { $field="pSensorManager" }requires { $field="pSystem" }requires { $field="pTaskExecutor" }callback { $transition="validate" $method="validate" }manipulation { $classname="com.cohorte.iot.qualif.measures.CCpntMeasuresGenerator" interface { $name="com.cohorte.iot.qualif.measures.IMeasuresGenerator" }field { $name="pAccountsManager" $type="com.cohorte.iot.api.managers.IAccountsManager" }field { $name="pAggregateDir" $type="org.psem2m.utilities.files.CXFileDir" }field { $name="pAuthManager" $type="com.cohorte.iot.api.managers.IAuthenticationManager" }field { $name="pAutomate" $type="com.cohorte.iot.qualif.measures.CCpntMeasuresGenerator$CAggregateAutomateAction" }field { $name="pConfig" $type="org.psem2m.utilities.json.JSONObject" }field { $name="pDeviceSubSetManager" $type="com.cohorte.iot.api.managers.IDeviceSubsetsManager" }field { $name="pDevicesManager" $type="com.cohorte.iot.api.managers.IDevicesManager" }field { $name="pEventPublisher" $type="com.cohorte.iot.api.IEventPublisher" }field { $name="pFeature" $type="com.cohorte.iot.api.features.IFeature" }field { $name="pHasInit" $type="boolean" }field { $name="pInternalSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }field { $name="pListOrganizationName" $type="java.util.Map" }field { $name="pLoggerService" $type="com.cohorte.iot.qualif.IQualifLoggerFile" }field { $name="pMeasureManager" $type="com.cohorte.iot.api.managers.IMeasuresManager" }field { $name="pOrgManager" $type="com.cohorte.iot.api.managers.IOrganizationsManager" }field { $name="pOrgTreadMills" $type="com.cohorte.iot.api.model.Organization" }field { $name="pSensorManager" $type="com.cohorte.iot.api.managers.ISensorsManager" }field { $name="pSensorsByOrga" $type="java.util.Map" }field { $name="pSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }field { $name="pTask" $type="com.cohorte.iot.api.tasks.CTracker" }field { $name="pTaskExecutor" $type="com.cohorte.iot.core.api.ITasksExecutor" }method { $name="activate" }method { $name="createAccount" }method { $name="createDeviceSubSet" $arguments="{java.util.List,com.cohorte.iot.api.model.Organization}" $names="{wListDevice,aOrg}" }method { $name="createSensorsAndDevices" $return="java.util.List" $arguments="{com.cohorte.iot.api.model.Organization}" $names="{aOrg}" }method { $name="createStoreOrganzation" }method { $name="createTreadMillsOrganization" }method { $name="getLogger" $return="org.psem2m.utilities.logging.IActivityLogger" }method { $name="init" $arguments="{org.psem2m.utilities.json.JSONObject}" $names="{aConfig}" }method { $name="initNameOrganization" }method { $name="remove" }method { $name="validate" }inner { $name="CAggregateAutomateAction" method { $name="createMeasures" $return="java.util.List" $arguments="{com.cohorte.iot.api.model.Sensor}" $names="{}" }method { $name="getLock" $return="java.lang.Object" }method { $name="getSimulateDistance" $return="long" }method { $name="getSimulateTimeSpent" $return="long" }method { $name="initStartDate" }method { $name="initStepTime" }method { $name="initTotalRun" }method { $name="run" }method { $name="setContinue" $arguments="{boolean}" $names="{}" }}}}component { $name="IotPack-Aggregator-Qualif-RestApi-CCpntMockEndpointHttp-Factory" $classname="com.cohorte.iot.qualif.mock.CCpntMockEndpointHttp" provides { $specifications="{com.cohorte.iot.qualif.mock.CCpntMockEndpointHttp}" }requires { $field="pSystem" }manipulation { $classname="com.cohorte.iot.qualif.mock.CCpntMockEndpointHttp" $super="com.cohorte.iot.aggregator.restapi.CAbstractRestApiEndpoint" field { $name="pSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }method { $name="create" $return="javax.ws.rs.core.Response" $arguments="{javax.servlet.http.HttpServletRequest,java.lang.String}" $names="{aRequest,aJson}" }method { $name="delete" $return="javax.ws.rs.core.Response" $arguments="{javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.ws.rs.core.UriInfo}" $names="{aRequest,aId,aExpands,uri}" }method { $name="getInternalSystem" $return="com.cohorte.iot.core.api.IInternalSystem" }method { $name="update" $return="javax.ws.rs.core.Response" $arguments="{javax.servlet.http.HttpServletRequest,java.lang.String}" $names="{aRequest,aJson}" }}}component { $name="IotPack-Aggregator-Core-Qualif-CCpntMockMqttClientAck-Factory" $classname="com.cohorte.iot.qualif.mock.CCpntMockMqttClientAck" provides { $specifications="{com.cohorte.iot.qualif.mock.CCpntMockMqttClientAck}" }requires { $field="pMqttBuilder" }requires { $field="pSytem" }callback { $transition="invalidate" $method="inValidate" }callback { $transition="validate" $method="validate" }manipulation { $classname="com.cohorte.iot.qualif.mock.CCpntMockMqttClientAck" $super="com.cohorte.iot.aggregator.core.api.CAbstractComponentBase" interface { $name="org.eclipse.paho.client.mqttv3.MqttCallback" }field { $name="pClient" $type="org.eclipse.paho.client.mqttv3.MqttAsyncClient" }field { $name="pMqttBuilder" $type="org.cohorte.extra.mqtt.IMqttClientBuilder" }field { $name="pSytem" $type="com.cohorte.iot.core.api.IInternalSystem" }method { $name="connectionLost" $arguments="{java.lang.Throwable}" $names="{cause}" }method { $name="deliveryComplete" $arguments="{org.eclipse.paho.client.mqttv3.IMqttDeliveryToken}" $names="{token}" }method { $name="getInternalSystem" $return="com.cohorte.iot.core.api.IInternalSystem" }method { $name="inValidate" }method { $name="messageArrived" $arguments="{java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage}" $names="{topic,message}" }method { $name="validate" }}}component { $name="IotPack-Qualif-CCpntOrganizationGenerator-Factory" $classname="com.cohorte.iot.qualif.organizations.CCpntOrganizationGenerator" provides { $specifications="{com.cohorte.iot.qualif.organizations.IOrganizationGenerator}" }requires { $field="pEventPublisher" }requires { $field="pFeature" $filter="(featureName=qualification)" $optional="true" }requires { $field="pInternalSystem" }requires { $field="pLoggerService" }requires { $field="pOrgManager" }requires { $field="pPlatformDirsSvc" }requires { $field="pSystem" }requires { $field="pTaskExecutor" }callback { $transition="validate" $method="validate" }manipulation { $classname="com.cohorte.iot.qualif.organizations.CCpntOrganizationGenerator" interface { $name="com.cohorte.iot.qualif.organizations.IOrganizationGenerator" }field { $name="pAutomateAction" $type="com.cohorte.iot.qualif.organizations.CCpntOrganizationGenerator$COrganizationAutomateAction" }field { $name="pEventPublisher" $type="com.cohorte.iot.api.IEventPublisher" }field { $name="pFeature" $type="com.cohorte.iot.api.features.IFeature" }field { $name="pHasInit" $type="boolean" }field { $name="pInternalSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }field { $name="pLoggerService" $type="com.cohorte.iot.qualif.IQualifLoggerFile" }field { $name="pOrgFranceAdmin" $type="com.cohorte.iot.api.model.Organization" }field { $name="pOrgManager" $type="com.cohorte.iot.api.managers.IOrganizationsManager" }field { $name="pOrganizationDir" $type="org.psem2m.utilities.files.CXFileDir" }field { $name="pPlatformDirsSvc" $type="org.psem2m.isolates.services.dirs.IPlatformDirsSvc" }field { $name="pSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }field { $name="pTask" $type="com.cohorte.iot.api.tasks.CTracker" }field { $name="pTaskExecutor" $type="com.cohorte.iot.core.api.ITasksExecutor" }method { $name="activate" }method { $name="authenticate" $return="com.cohorte.iot.api.security.CAuthInfos" $arguments="{java.lang.String}" $names="{aTenantId}" }method { $name="creategFranceAdminOrganization" }method { $name="getLogger" $return="org.psem2m.utilities.logging.IActivityLogger" }method { $name="init" $arguments="{org.psem2m.utilities.json.JSONObject}" $names="{aConfig}" }method { $name="remove" }method { $name="remove" $arguments="{java.lang.String}" $names="{aTenantId}" }method { $name="validate" }inner { $name="COrganizationAutomateAction" method { $name="addToMap" $arguments="{java.util.Map,java.lang.String,com.cohorte.iot.api.model.Organization}" $names="{}" }method { $name="createCirconscription" $return="com.cohorte.iot.api.model.Organization" $arguments="{com.cohorte.iot.api.model.Organization,java.lang.String}" $names="{}" }method { $name="createCity" $return="com.cohorte.iot.model.OrganizationCity" $arguments="{com.cohorte.iot.api.model.Organization,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String}" $names="{}" }method { $name="createDepartement" $return="com.cohorte.iot.model.OrganizationDepartment" $arguments="{com.cohorte.iot.api.model.Organization,java.lang.String,java.lang.String,java.lang.String,java.lang.String}" $names="{}" }method { $name="createRegion" $return="com.cohorte.iot.model.OrganizationRegion" $arguments="{java.util.List,com.cohorte.iot.api.model.Organization,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String}" $names="{}" }method { $name="createRegions" $arguments="{java.util.ArrayList,java.util.Map,java.util.Map}" $names="{}" }method { $name="downloadFile" }method { $name="getLock" $return="java.lang.Object" }method { $name="processFile" }method { $name="run" }method { $name="setContinue" $arguments="{boolean}" $names="{}" }method { $name="storeOrganization" $arguments="{java.lang.String,java.util.Map}" $names="{}" }}}}component { $name="IotPack-Aggregator-Core-Qualif-CCpntTaskQualificationOne-Factory" $classname="com.cohorte.iot.qualif.task.CCpntTaskQualificationOne" provides { $specifications="{com.cohorte.iot.core.api.ITrackableCallable}" property { $name="name" $field="pName" }}requires { $field="pMqttClientService" }requires { $field="pSystem" }manipulation { $classname="com.cohorte.iot.qualif.task.CCpntTaskQualificationOne" $super="com.cohorte.iot.aggregator.core.api.CAbstractComponentBase" interface { $name="com.cohorte.iot.core.api.ITrackableCallable" }field { $name="pMqttClientService" $type="com.cohorte.iot.api.clients.IExternalServiceMqttClient" }field { $name="pName" $type="java.lang.String" }field { $name="pSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }method { $name="call" $return="com.cohorte.iot.api.tasks.CTracker" $arguments="{com.cohorte.iot.api.tasks.CTracker}" $names="{aTracker}" }method { $name="getInternalSystem" $return="com.cohorte.iot.core.api.IInternalSystem" }}}component { $name="IotPack-Aggregator-Core-Qualif-CCpntTaskQualificationThree-Factory" $classname="com.cohorte.iot.qualif.task.CCpntTaskQualificationThree" provides { $specifications="{com.cohorte.iot.core.api.ITrackableCallable}" property { $name="name" $field="pName" }}requires { $field="pHttpClientService" $filter="(name=httpQualif)" }requires { $field="pSystem" }manipulation { $classname="com.cohorte.iot.qualif.task.CCpntTaskQualificationThree" $super="com.cohorte.iot.aggregator.core.api.CAbstractComponentBase" interface { $name="com.cohorte.iot.core.api.ITrackableCallable" }field { $name="pHttpClientService" $type="com.cohorte.iot.api.clients.IExternalServiceHttpClient" }field { $name="pName" $type="java.lang.String" }field { $name="pSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }method { $name="call" $return="com.cohorte.iot.api.tasks.CTracker" $arguments="{com.cohorte.iot.api.tasks.CTracker}" $names="{aTracker}" }method { $name="getInternalSystem" $return="com.cohorte.iot.core.api.IInternalSystem" }}}component { $name="IotPack-Aggregator-Core-Qualif-CCpntTaskQualificationTwo-Factory" $classname="com.cohorte.iot.qualif.task.CCpntTaskQualificationTwo" provides { $specifications="{com.cohorte.iot.core.api.ITrackableCallable}" property { $name="name" $field="pName" }}requires { $field="pMqttClient" }requires { $field="pSystem" }callback { $transition="validate" $method="validate" }manipulation { $classname="com.cohorte.iot.qualif.task.CCpntTaskQualificationTwo" $super="com.cohorte.iot.aggregator.core.api.CAbstractComponentBase" interface { $name="com.cohorte.iot.core.api.ITrackableCallable" }field { $name="pLastMessage" $type="byte[]" }field { $name="pMqttClient" $type="com.cohorte.iot.api.clients.IExternalServiceMqttClient" }field { $name="pName" $type="java.lang.String" }field { $name="pSystem" $type="com.cohorte.iot.core.api.IInternalSystem" }field { $name="wLock" $type="java.lang.Object" }method { $name="call" $return="com.cohorte.iot.api.tasks.CTracker" $arguments="{com.cohorte.iot.api.tasks.CTracker}" $names="{aTracker}" }method { $name="getInternalSystem" $return="com.cohorte.iot.core.api.IInternalSystem" }method { $name="validate" }inner { $name="1" method { $name="apply" $return="java.lang.Object" $arguments="{java.lang.String,byte[]}" $names="{}" }method { $name="apply" $return="java.lang.Object" $arguments="{java.lang.Object,java.lang.Object}" $names="{}" }}inner { $name="2" method { $name="apply" $return="java.lang.Object" $arguments="{java.lang.String,byte[]}" $names="{}" }method { $name="apply" $return="java.lang.Object" $arguments="{java.lang.Object,java.lang.Object}" $names="{}" }}}}